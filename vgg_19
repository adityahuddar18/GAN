
import os
import shutil
import random

def split_data(source_dir, train_dir, val_dir, test_dir, train_ratio=0.7, val_ratio=0.15, test_ratio=0.15):
    assert train_ratio + val_ratio + test_ratio == 1, "Ratios must sum to 1"

    categories = ['real', 'fake']

    for category in categories:
        category_path = os.path.join(source_dir, category)
        if not os.path.exists(category_path):
            print(f"Directory {category_path} does not exist.")
            continue

        images = os.listdir(category_path)
        random.shuffle(images)

        train_count = int(len(images) * train_ratio)
        val_count = int(len(images) * val_ratio)

        train_images = images[:train_count]
        val_images = images[train_count:train_count + val_count]
        test_images = images[train_count + val_count:]

        for img in train_images:
            src = os.path.join(category_path, img)
            dest = os.path.join(train_dir, category)
            shutil.copy(src, dest)

        for img in val_images:
            src = os.path.join(category_path, img)
            dest = os.path.join(val_dir, category)
            shutil.copy(src, dest)

        for img in test_images:
            src = os.path.join(category_path, img)
            dest = os.path.join(test_dir, category)
            shutil.copy(src, dest)

# Define paths
source_dir = '/content/drive/MyDrive/base_dir'
train_dir = '/content/drive/MyDrive/dataset_split/train'
val_dir = '/content/drive/MyDrive/dataset_split/val'
test_dir = '/content/drive/MyDrive/dataset_split/test'

# Create directories
os.makedirs(train_dir, exist_ok=True)
os.makedirs(val_dir, exist_ok=True)
os.makedirs(test_dir, exist_ok=True)
os.makedirs(os.path.join(train_dir, 'real'), exist_ok=True)
os.makedirs(os.path.join(train_dir, 'fake'), exist_ok=True)
os.makedirs(os.path.join(val_dir, 'real'), exist_ok=True)
os.makedirs(os.path.join(val_dir, 'fake'), exist_ok=True)
os.makedirs(os.path.join(test_dir, 'real'), exist_ok=True)
os.makedirs(os.path.join(test_dir, 'fake'), exist_ok=True)

# Split the data
split_data(source_dir, train_dir, val_dir, test_dir)
